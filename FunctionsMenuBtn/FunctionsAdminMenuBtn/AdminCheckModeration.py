import os

from telebot import types

from DataBase.Advertisement_database import get_all_info_about_advertisement, get_info_for_moderation, \
    set_status_for_ad_on_review, get_ads_where_moderation_on_review
from DataBase.Complaints_database import get_complaints_with_status_none, set_status_for_ad_without_violation
from DataBase.Users_database import get_user_data
from Markups.menu_markups import admin_next_complaint, admin_keyboard_menu, admin_menu_keyboard_menu, \
    moderator_moderation_exit, moderator_menu_keyboard_menu, keyboard_menu
from OtherTools.Currency–°onverter import convert_currency
from OtherTools.MonthConverter import format_ukrainian_datetime


def check_moderation(bot, message):
    acc_id = message.chat.id
    moderation_data = get_info_for_moderation(acc_id)
    user_data = get_user_data(acc_id)


    if not moderation_data:
        role = user_data.get('role', 2)
        if role == 1:
            bot.send_message(message.chat.id, "‚ùóÔ∏è –ù–æ–≤—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –≤—ñ–¥—Å—É—Ç–Ω—ñ", reply_markup=moderator_menu_keyboard_menu)
            return

        elif role == 2:
            bot.send_message(message.chat.id, "‚ùóÔ∏è –ù–æ–≤—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –≤—ñ–¥—Å—É—Ç–Ω—ñ", reply_markup=admin_menu_keyboard_menu)
            return

        else:
            bot.send_message(message.chat.id, "‚ùóÔ∏è –£ –í–∞—Å –Ω–µ–º–∞—î —Ç–∞–∫–∏—Ö –ø—Ä–∞–≤", reply_markup=keyboard_menu)
            return

    for idx, moderation in enumerate(moderation_data, start=1):
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ù–µ –∑–∞—Ç—è–≥—É–π—Ç–µ –∑ –ø–µ—Ä–µ–≥–ª—è–¥–æ–º –æ–≥–æ–ª–æ—à–µ–Ω—å", reply_markup=moderator_moderation_exit)

        new_status = f'on review {acc_id}'
        set_status_for_ad_on_review(moderation[0], new_status)

        ad_info = get_all_info_about_advertisement(moderation[0])

        price_uah = ad_info[7]
        formatted_price_uah = '{:,}'.format(price_uah).replace(',', ' ')

        converted_price_usd = convert_currency(price_uah, 'UAH', 'USD')
        formatted_price_usd = '{:,}'.format(converted_price_usd).replace(',', ' ')

        formatted_date = format_ukrainian_datetime(ad_info[8])

        if ad_info:
            ad_info_message = (
                f"‚ö†Ô∏è *–ù–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—ó ‚Ññ {ad_info[0]}* Ô∏è\n"
                #f"‚ù§Ô∏è *{moderation[0]}Ô∏è*\n\n"
                f"üìù *–ù–∞–∑–≤–∞:* {ad_info[4]}\n\n"
                f"*–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó:* '{ad_info[2]}' *-> –ü—ñ–¥–∫–∞—Ç–µ–≥–æ—Ä—ñ—ó:* '{ad_info[3]}'\n\n"
                f"*–°—Ç–∞–Ω:* {ad_info[15]}\n\n"
                f"üí¨ *–û–ø–∏—Å:* {ad_info[5]}\n\n"
                f"üí∞ *–¶—ñ–Ω–∞:* {formatted_price_uah}‚Ç¥ (${formatted_price_usd})\n"
                f"üóì *–î–∞—Ç–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó:* {formatted_date}\n\n"
                f"üìç *–ú—ñ—Å—Ü–µ –∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è:* {ad_info[11]}, {ad_info[12]}"
            )

            folder_name = ad_info[6]

            photo_file_path = os.path.join("photos", folder_name, "photo_1.jpg")

            moderation_ad_func = types.InlineKeyboardMarkup(row_width=2)
            moderation_change_name_ad = types.InlineKeyboardButton("‚úèÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ –Ω–∞–∑–≤—É",
                                                                   callback_data=f'moderator_name_btn{ad_info[0]}')
            moderation_change_category_ad = types.InlineKeyboardButton("üìö –ó–º—ñ–Ω–∏—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó",
                                                                       callback_data=f'moderator_category_btn{ad_info[0]}')
            moderation_change_description_ad = types.InlineKeyboardButton("üìù –ó–º—ñ–Ω–∏—Ç–∏ –æ–ø–∏—Å",
                                                                          callback_data=f'moderator_description_btn{ad_info[0]}')
            show_all_photos_button = types.InlineKeyboardButton("üì∑–ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ —Ñ–æ—Ç–æ",
                                                                callback_data=f'show_all_photos_button{ad_info[0]}')

            moderation_publish_ad = types.InlineKeyboardButton("‚úÖ –û–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏",
                                                               callback_data=f'moderator_publish_ad_btn{ad_info[0]}')
            moderation_delete_ad = types.InlineKeyboardButton("üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏",
                                                              callback_data=f'moderator_delete_ad_btn{ad_info[0]}')
            moderation_ad_func.add(moderation_change_name_ad)
            moderation_ad_func.add(moderation_change_category_ad)
            moderation_ad_func.add(moderation_change_description_ad)
            moderation_ad_func.add(show_all_photos_button)
            moderation_ad_func.add(moderation_publish_ad, moderation_delete_ad)

            text = f'‚ùóÔ∏è –û—Å—Ç–∞–Ω–Ω—ñ –∑–º—ñ–Ω–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è ID:*{ad_info[0]}*\n\n{ad_info[14]}'
            bot.send_message(acc_id, text, parse_mode="Markdown")

            with open(photo_file_path, 'rb') as photo:
                bot.send_photo(acc_id, photo, caption=ad_info_message, parse_mode="Markdown",
                               reply_markup=moderation_ad_func)

            break

        else:
            bot.send_message(message.chat.id, f"–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–ª—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è {ad_info[2]}.")