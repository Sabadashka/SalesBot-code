import math

from telebot import types

from Markups.menu_markups import keyboard_search_menu, keyboard_menu
from SearchAds.FiltersButtons import get_matches_text_button, get_category_and_subcategory_button, \
    get_price_min_max_callback, get_location_button, get_sort_by_button, get_condition_button
from SearchAds.SearchAds import SearchAdsByBot, get_user_search

search_ads = SearchAdsByBot()


def search_message(bot, message, user_search):
    search_message_text = "üåü<b> –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø–æ—à—É–∫—É:</b>\n\n"

    if user_search.matches_text:
        search_message_text += f"üìå –¢–µ–∫—Å—Ç –∑–±—ñ–≥—ñ–≤: {user_search.matches_text}\n"

    if user_search.condition:
        search_message_text += f"üìå –°—Ç–∞–Ω: {user_search.condition}\n"

    if user_search.category and user_search.subcategory:
        search_message_text += f"üìå –ö–∞—Ç–µ–≥–æ—Ä—ñ—è: {user_search.category} -> –ü—ñ–¥–∫–∞—Ç–µ–≥–æ—Ä—ñ—è: {user_search.subcategory}\n"

    if user_search.price_min is not None and user_search.price_max is not None:
        if not (user_search.price_min == 0 and math.isinf(user_search.price_max)):
            search_message_text += f"üìå –¶—ñ–Ω–∞ –≤—ñ–¥: {user_search.price_min} –¥–æ {user_search.price_max}\n"

    if user_search.location_region and user_search.location_city:
        search_message_text += f"üìå –ú—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è: {user_search.location_region}, {user_search.location_city}\n"

    if user_search.sort_date:
        if user_search.sort_date == 'DESC':
            sort_name = '–ù–∞–π–Ω–æ–≤—ñ—à—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è'
            search_message_text += f"üìå –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∑–∞ –¥–∞—Ç–æ—é: {sort_name}\n"

        elif user_search.sort_date == 'ASC':
            sort_name = '–ù–∞–π—Å—Ç–∞—Ä—ñ—à—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è'
            search_message_text += f"üìå –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∑–∞ –¥–∞—Ç–æ—é: {sort_name}\n"

    elif user_search.sort_price:
        if user_search.sort_price == 'DESC':
            sort_name = '–ù–∞–π–±—ñ–ª—å—à–∞ —Ü—ñ–Ω–∞'
            search_message_text += f"üìå –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∑–∞ —Ü—ñ–Ω–æ—é: {sort_name}\n"

        elif user_search.sort_price == 'ASC':
            sort_name = '–ù–∞–π–º–µ–Ω—à–∞ —Ü—ñ–Ω–∞'
            search_message_text += f"üìå –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∑–∞ —Ü—ñ–Ω–æ—é: {sort_name}\n"

    if not (user_search.matches_text or user_search.condition or (user_search.category and user_search.subcategory) or (
            (user_search.price_min is not None and user_search.price_max is not None and
             not (user_search.price_min == 0 and user_search.price_max == float('inf')))) or
            (
                    user_search.location_region and user_search.location_city) or user_search.sort_date or user_search.sort_price):
        search_message_text += "<b><i>‚ùóÔ∏è –£ –í–∞—Å —â–µ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –ø–æ—à—É–∫—É:</i></b>\n<i> - –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É <b>'‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –ø–æ—à—É–∫—É'</b>, —â–æ–± —ó—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏</i>\n"

    search_ads_filter_settings = types.InlineKeyboardMarkup(row_width=1)
    filters_settings_btn = types.InlineKeyboardButton("‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–æ—à—É–∫—É", callback_data=f'filters_settings_btn')
    search_ads_filter_settings.add(filters_settings_btn)

    bot.send_message(message.chat.id, "<b>‚ùóÔ∏è –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è</b>\n<i>    - –Ø–∫—â–æ –í–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–ª–∏ —Ñ—ñ–ª—å—Ç—Ä–∏ –ø–æ—à—É–∫—É/—Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –ø–æ—à—É–∫—É, —Ç–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Å—Ç—å –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–Ω—É –∫–Ω–æ–ø–∫—É <b>'üöÄ –í–∏–∫–æ–Ω–∞—Ç–∏ –ø–æ—à—É–∫'</b></i>", parse_mode='HTML',
                     reply_markup=keyboard_search_menu)
    bot.send_message(message.chat.id, search_message_text, parse_mode='HTML', reply_markup=search_ads_filter_settings)


def search_filters_message(bot, message, user_search):
    search_filters_message_text = "<b>‚ùóÔ∏è –û–±–µ—Ä—ñ—Ç—å, —è–∫–∏–π —Ñ—ñ–ª—å—Ç–µ—Ä –±–∞–∂–∞—î—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏:</b>"

    filters_search_func_buttons = types.InlineKeyboardMarkup(row_width=1)

    matches_text_btn_text, callback = get_matches_text_button(user_search)
    matches_text_btn = types.InlineKeyboardButton(matches_text_btn_text, callback_data=callback)

    condition_btn_text, callback = get_condition_button(user_search)
    condition_btn = types.InlineKeyboardButton(condition_btn_text, callback_data=callback)

    category_and_subcategory_btn_text, callback = get_category_and_subcategory_button(user_search)
    category_and_subcategory_btn = types.InlineKeyboardButton(category_and_subcategory_btn_text, callback_data=callback)

    price_min_max_btn_text, callback = get_price_min_max_callback(user_search)
    price_min_max_btn = types.InlineKeyboardButton(price_min_max_btn_text, callback_data=callback)

    location_btn_text, callback = get_location_button(user_search)
    location_btn = types.InlineKeyboardButton(location_btn_text, callback_data=callback)

    sort_by_btn_text, callback = get_sort_by_button(user_search)
    sort_by_btn = types.InlineKeyboardButton(sort_by_btn_text, callback_data=callback)

    cancel_all_filters_btn = types.InlineKeyboardButton("‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏ –≤–≤–µ–¥–µ–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø–æ—à—É–∫—É ‚ùå", callback_data='cancel_all_filters_btn')
    back_to_message_filters_btn = types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data='back_to_message_filters_btn')

    filters_search_func_buttons.add(matches_text_btn, condition_btn, category_and_subcategory_btn, price_min_max_btn, location_btn, sort_by_btn, cancel_all_filters_btn, back_to_message_filters_btn)

    bot.send_message(message.chat.id, search_filters_message_text, parse_mode='HTML', reply_markup=filters_search_func_buttons)
